pipeline {
    agent { label 'centos_worker' }
    environment {
        SLACK_TOKEN = credentials('slack-token')
        JIRA_CREDS = credentials('Ronnie-jira')
    }

    triggers { cron('0 0 * * 0') }

    options {
      timeout(time: 1, unit: 'HOURS') 
    }

    stages {
        stage('Update master and snapshot branch') {
            steps {
                sh '''pip3 install -r requirements.txt'''
                sh '''git clean -f'''
                sh 'python3 tools/new_minor_OCP_version.py.py -up ${JIRA_CREDS}"'
            }
        }
    }

    post {
        failure {
            script {
                def data = [text: "OCP version failed, see: ${BUILD_URL}"]
                writeJSON(file: 'data.txt', json: data, pretty: 4)
            }
            sh '''curl -X POST -H 'Content-type: application/json' --data-binary "@data.txt"  https://hooks.slack.com/services/$SLACK_TOKEN'''
        }
    }
}
